// This file is automatically generated by qtc from "domain.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line gen/gotpl/domain.qtpl:1
package gotpl

//line gen/gotpl/domain.qtpl:1
import (
	"github.com/chromedp/cdproto-gen/gen/genutil"
	"github.com/chromedp/cdproto-gen/pdl"
)

// DomainTemplate is the template for a single domain.

//line gen/gotpl/domain.qtpl:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line gen/gotpl/domain.qtpl:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line gen/gotpl/domain.qtpl:7
func StreamDomainTemplate(qw422016 *qt422016.Writer, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:7
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:8
	for _, c := range d.Commands {
		//line gen/gotpl/domain.qtpl:8
		qw422016.N().S(`
`)
		//line gen/gotpl/domain.qtpl:9
		qw422016.N().S(CommandTemplate(c, d, domains, sharedFunc))
		//line gen/gotpl/domain.qtpl:9
		qw422016.N().S(`
`)
		//line gen/gotpl/domain.qtpl:10
	}
	//line gen/gotpl/domain.qtpl:10
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:11
	if len(d.Commands) > 0 {
		//line gen/gotpl/domain.qtpl:11
		qw422016.N().S(`
// Command names.
const (
`)
		//line gen/gotpl/domain.qtpl:14
		for _, c := range d.Commands {
			//line gen/gotpl/domain.qtpl:14
			qw422016.N().S(`
	`)
			//line gen/gotpl/domain.qtpl:15
			qw422016.N().S(CommandMethodType(c, nil))
			//line gen/gotpl/domain.qtpl:15
			qw422016.N().S(` = `)
			//line gen/gotpl/domain.qtpl:15
			qw422016.N().Q(ProtoName(c, d))
			//line gen/gotpl/domain.qtpl:15
		}
		//line gen/gotpl/domain.qtpl:15
		qw422016.N().S(`)
`)
		//line gen/gotpl/domain.qtpl:16
	}
	//line gen/gotpl/domain.qtpl:16
	qw422016.N().S(`
`)
//line gen/gotpl/domain.qtpl:17
}

//line gen/gotpl/domain.qtpl:17
func WriteDomainTemplate(qq422016 qtio422016.Writer, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:17
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line gen/gotpl/domain.qtpl:17
	StreamDomainTemplate(qw422016, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:17
	qt422016.ReleaseWriter(qw422016)
//line gen/gotpl/domain.qtpl:17
}

//line gen/gotpl/domain.qtpl:17
func DomainTemplate(d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) string {
	//line gen/gotpl/domain.qtpl:17
	qb422016 := qt422016.AcquireByteBuffer()
	//line gen/gotpl/domain.qtpl:17
	WriteDomainTemplate(qb422016, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:17
	qs422016 := string(qb422016.B)
	//line gen/gotpl/domain.qtpl:17
	qt422016.ReleaseByteBuffer(qb422016)
	//line gen/gotpl/domain.qtpl:17
	return qs422016
//line gen/gotpl/domain.qtpl:17
}

// CommandTemplate is the general command template.

//line gen/gotpl/domain.qtpl:20
func StreamCommandTemplate(qw422016 *qt422016.Writer, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:20
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:21
	/* add *Param type */

	//line gen/gotpl/domain.qtpl:21
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:22
	qw422016.N().S(TypeTemplate(c, CommandTypePrefix, CommandTypeSuffix, d, domains, sharedFunc, nil, false, true))
	//line gen/gotpl/domain.qtpl:22
	qw422016.N().S(`

`)
	//line gen/gotpl/domain.qtpl:24
	/* add Command func */

	//line gen/gotpl/domain.qtpl:24
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:25
	qw422016.N().S(CommandFuncTemplate(c, d, domains, sharedFunc))
	//line gen/gotpl/domain.qtpl:25
	qw422016.N().S(`

`)
	//line gen/gotpl/domain.qtpl:27
	/* add param funcs (only if it has parameters and a returns). */

	//line gen/gotpl/domain.qtpl:27
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:28
	if len(c.Parameters) != 0 {
		//line gen/gotpl/domain.qtpl:28
		for _, p := range c.Parameters {
			//line gen/gotpl/domain.qtpl:28
			if !p.Optional {
				//line gen/gotpl/domain.qtpl:28
				continue
				//line gen/gotpl/domain.qtpl:28
			}
			//line gen/gotpl/domain.qtpl:28
			qw422016.N().S(`
`)
			//line gen/gotpl/domain.qtpl:29
			qw422016.N().S(CommandOptionFuncTemplate(p, c, d, domains, sharedFunc))
			//line gen/gotpl/domain.qtpl:29
			qw422016.N().S(`
`)
			//line gen/gotpl/domain.qtpl:30
		}
		//line gen/gotpl/domain.qtpl:30
	}
	//line gen/gotpl/domain.qtpl:30
	qw422016.N().S(`

`)
	//line gen/gotpl/domain.qtpl:32
	/* add *Returns type */

	//line gen/gotpl/domain.qtpl:32
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:33
	if len(c.Returns) != 0 {
		//line gen/gotpl/domain.qtpl:33
		qw422016.N().S(`
`)
		//line gen/gotpl/domain.qtpl:34
		qw422016.N().S(TypeTemplate(&pdl.Type{
			Name:        c.Name,
			Type:        pdl.TypeObject,
			Description: "Return values.",
			Properties:  c.Returns,
		}, CommandReturnsPrefix, CommandReturnsSuffix, d, domains, sharedFunc, nil, false, false))
		//line gen/gotpl/domain.qtpl:39
		qw422016.N().S(`
`)
		//line gen/gotpl/domain.qtpl:40
	}
	//line gen/gotpl/domain.qtpl:40
	qw422016.N().S(`

`)
	//line gen/gotpl/domain.qtpl:42
	/* add CommandParams.Do func */

	//line gen/gotpl/domain.qtpl:42
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:43
	qw422016.N().S(CommandDoFuncTemplate(c, d, domains, sharedFunc))
	//line gen/gotpl/domain.qtpl:43
	qw422016.N().S(`
`)
//line gen/gotpl/domain.qtpl:44
}

//line gen/gotpl/domain.qtpl:44
func WriteCommandTemplate(qq422016 qtio422016.Writer, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:44
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line gen/gotpl/domain.qtpl:44
	StreamCommandTemplate(qw422016, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:44
	qt422016.ReleaseWriter(qw422016)
//line gen/gotpl/domain.qtpl:44
}

//line gen/gotpl/domain.qtpl:44
func CommandTemplate(c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) string {
	//line gen/gotpl/domain.qtpl:44
	qb422016 := qt422016.AcquireByteBuffer()
	//line gen/gotpl/domain.qtpl:44
	WriteCommandTemplate(qb422016, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:44
	qs422016 := string(qb422016.B)
	//line gen/gotpl/domain.qtpl:44
	qt422016.ReleaseByteBuffer(qb422016)
	//line gen/gotpl/domain.qtpl:44
	return qs422016
//line gen/gotpl/domain.qtpl:44
}

// CommandFuncTemplate is the command func template.

//line gen/gotpl/domain.qtpl:47
func StreamCommandFuncTemplate(qw422016 *qt422016.Writer, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:48
	cmdName := CamelName(c)
	typ := CommandType(c)

	//line gen/gotpl/domain.qtpl:50
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:51
	qw422016.N().S(genutil.FormatComment(c.Description, "", cmdName+" "))
	//line gen/gotpl/domain.qtpl:51
	if len(c.Parameters) > 0 {
		//line gen/gotpl/domain.qtpl:51
		qw422016.N().S(`
//
// parameters:`)
		//line gen/gotpl/domain.qtpl:53
		for _, p := range c.Parameters {
			//line gen/gotpl/domain.qtpl:53
			if p.Optional {
				//line gen/gotpl/domain.qtpl:53
				continue
				//line gen/gotpl/domain.qtpl:53
			}
			//line gen/gotpl/domain.qtpl:53
			qw422016.N().S(`
//   `)
			//line gen/gotpl/domain.qtpl:54
			qw422016.N().S(ParamDesc(p))
			//line gen/gotpl/domain.qtpl:54
			if p.Optional {
				//line gen/gotpl/domain.qtpl:54
				qw422016.N().S(` (optional)`)
				//line gen/gotpl/domain.qtpl:54
			}
			//line gen/gotpl/domain.qtpl:54
		}
		//line gen/gotpl/domain.qtpl:54
	}
	//line gen/gotpl/domain.qtpl:54
	qw422016.N().S(`
func `)
	//line gen/gotpl/domain.qtpl:55
	qw422016.N().S(cmdName)
	//line gen/gotpl/domain.qtpl:55
	qw422016.N().S(`(`)
	//line gen/gotpl/domain.qtpl:55
	qw422016.N().S(ParamList(c, d, domains, sharedFunc, false))
	//line gen/gotpl/domain.qtpl:55
	qw422016.N().S(`) *`)
	//line gen/gotpl/domain.qtpl:55
	qw422016.N().S(typ)
	//line gen/gotpl/domain.qtpl:55
	qw422016.N().S(`{
	return &`)
	//line gen/gotpl/domain.qtpl:56
	qw422016.N().S(typ)
	//line gen/gotpl/domain.qtpl:56
	qw422016.N().S(`{`)
	//line gen/gotpl/domain.qtpl:56
	for _, t := range c.Parameters {
		//line gen/gotpl/domain.qtpl:56
		if !t.Optional {
			//line gen/gotpl/domain.qtpl:56
			qw422016.N().S(`
		`)
			//line gen/gotpl/domain.qtpl:57
			qw422016.N().S(GoName(t, false))
			//line gen/gotpl/domain.qtpl:57
			qw422016.N().S(`: `)
			//line gen/gotpl/domain.qtpl:57
			qw422016.N().S(GoName(t, true))
			//line gen/gotpl/domain.qtpl:57
			qw422016.N().S(`,`)
			//line gen/gotpl/domain.qtpl:57
		}
		//line gen/gotpl/domain.qtpl:57
	}
	//line gen/gotpl/domain.qtpl:57
	qw422016.N().S(`
	}
}
`)
//line gen/gotpl/domain.qtpl:60
}

//line gen/gotpl/domain.qtpl:60
func WriteCommandFuncTemplate(qq422016 qtio422016.Writer, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:60
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line gen/gotpl/domain.qtpl:60
	StreamCommandFuncTemplate(qw422016, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:60
	qt422016.ReleaseWriter(qw422016)
//line gen/gotpl/domain.qtpl:60
}

//line gen/gotpl/domain.qtpl:60
func CommandFuncTemplate(c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) string {
	//line gen/gotpl/domain.qtpl:60
	qb422016 := qt422016.AcquireByteBuffer()
	//line gen/gotpl/domain.qtpl:60
	WriteCommandFuncTemplate(qb422016, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:60
	qs422016 := string(qb422016.B)
	//line gen/gotpl/domain.qtpl:60
	qt422016.ReleaseByteBuffer(qb422016)
	//line gen/gotpl/domain.qtpl:60
	return qs422016
//line gen/gotpl/domain.qtpl:60
}

// CommandOptionFuncTemplate is the command option func template.

//line gen/gotpl/domain.qtpl:63
func StreamCommandOptionFuncTemplate(qw422016 *qt422016.Writer, t *pdl.Type, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:64
	n := GoName(t, false)
	optName := OptionFuncPrefix + n + OptionFuncSuffix
	typ := CommandType(c)
	v := GoName(t, true)

	//line gen/gotpl/domain.qtpl:68
	qw422016.N().S(`
`)
	//line gen/gotpl/domain.qtpl:69
	qw422016.N().S(genutil.FormatComment(t.Description, "", optName+" "))
	//line gen/gotpl/domain.qtpl:69
	qw422016.N().S(`
func (p `)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(typ)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(`) `)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(optName)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(`(`)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(v)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(` `)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(GoType(t, d, domains, sharedFunc))
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(`) *`)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(typ)
	//line gen/gotpl/domain.qtpl:70
	qw422016.N().S(`{
	p.`)
	//line gen/gotpl/domain.qtpl:71
	qw422016.N().S(n)
	//line gen/gotpl/domain.qtpl:71
	qw422016.N().S(` = `)
	//line gen/gotpl/domain.qtpl:71
	qw422016.N().S(v)
	//line gen/gotpl/domain.qtpl:71
	qw422016.N().S(`
	return &p
}
`)
//line gen/gotpl/domain.qtpl:74
}

//line gen/gotpl/domain.qtpl:74
func WriteCommandOptionFuncTemplate(qq422016 qtio422016.Writer, t *pdl.Type, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:74
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line gen/gotpl/domain.qtpl:74
	StreamCommandOptionFuncTemplate(qw422016, t, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:74
	qt422016.ReleaseWriter(qw422016)
//line gen/gotpl/domain.qtpl:74
}

//line gen/gotpl/domain.qtpl:74
func CommandOptionFuncTemplate(t *pdl.Type, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) string {
	//line gen/gotpl/domain.qtpl:74
	qb422016 := qt422016.AcquireByteBuffer()
	//line gen/gotpl/domain.qtpl:74
	WriteCommandOptionFuncTemplate(qb422016, t, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:74
	qs422016 := string(qb422016.B)
	//line gen/gotpl/domain.qtpl:74
	qt422016.ReleaseByteBuffer(qb422016)
	//line gen/gotpl/domain.qtpl:74
	return qs422016
//line gen/gotpl/domain.qtpl:74
}

// CommandDoFuncTemplate is the command do func template.

//line gen/gotpl/domain.qtpl:77
func StreamCommandDoFuncTemplate(qw422016 *qt422016.Writer, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:78
	typ := CommandType(c)

	hasEmptyParams := len(c.Parameters) == 0
	hasEmptyRet := len(c.Returns) == 0

	emptyRet := EmptyRetList(c, d, domains, sharedFunc)
	if emptyRet != "" {
		emptyRet += ", "
	}

	retTypeList := RetTypeList(c, d, domains, sharedFunc)
	if retTypeList != "" {
		retTypeList += ", "
	}

	retValueList := RetNameList(c, "res", d, domains)
	if retValueList != "" {
		retValueList += ", "
	}

	b64ret := Base64EncodedRetParam(c)

	// determine if there's a conditional that indicates whether or not the
	// returned value is b64 encoded.
	var b64cond bool
	for _, p := range c.Returns {
		if p.Name == Base64EncodedParamName {
			b64cond = true
			break
		}
	}

	pval := "p"
	if hasEmptyParams {
		pval = "nil"
	}

	//line gen/gotpl/domain.qtpl:114
	qw422016.N().S(`
// Do executes `)
	//line gen/gotpl/domain.qtpl:115
	qw422016.N().S(ProtoName(c, d))
	//line gen/gotpl/domain.qtpl:115
	qw422016.N().S(` against the provided context.`)
	//line gen/gotpl/domain.qtpl:115
	if !hasEmptyRet {
		//line gen/gotpl/domain.qtpl:115
		qw422016.N().S(`
//
// returns:`)
		//line gen/gotpl/domain.qtpl:117
		for _, p := range c.Returns {
			//line gen/gotpl/domain.qtpl:117
			if p.Name == Base64EncodedParamName {
				//line gen/gotpl/domain.qtpl:117
				continue
				//line gen/gotpl/domain.qtpl:117
			}
			//line gen/gotpl/domain.qtpl:117
			qw422016.N().S(`
//   `)
			//line gen/gotpl/domain.qtpl:118
			qw422016.N().S(ParamDesc(p))
			//line gen/gotpl/domain.qtpl:118
		}
		//line gen/gotpl/domain.qtpl:118
	}
	//line gen/gotpl/domain.qtpl:118
	qw422016.N().S(`
func (p *`)
	//line gen/gotpl/domain.qtpl:119
	qw422016.N().S(typ)
	//line gen/gotpl/domain.qtpl:119
	qw422016.N().S(`) Do(ctxt context.Context, h cdp.Executor) (`)
	//line gen/gotpl/domain.qtpl:119
	qw422016.N().S(retTypeList)
	//line gen/gotpl/domain.qtpl:119
	qw422016.N().S(`err error) {`)
	//line gen/gotpl/domain.qtpl:119
	if hasEmptyRet {
		//line gen/gotpl/domain.qtpl:119
		qw422016.N().S(`
	return h.Execute(ctxt, `)
		//line gen/gotpl/domain.qtpl:120
		qw422016.N().S(CommandMethodType(c, nil))
		//line gen/gotpl/domain.qtpl:120
		qw422016.N().S(`, `)
		//line gen/gotpl/domain.qtpl:120
		qw422016.N().S(pval)
		//line gen/gotpl/domain.qtpl:120
		qw422016.N().S(`, nil)`)
		//line gen/gotpl/domain.qtpl:120
	} else {
		//line gen/gotpl/domain.qtpl:120
		qw422016.N().S(`
	// execute
	var res `)
		//line gen/gotpl/domain.qtpl:122
		qw422016.N().S(CommandReturnsType(c))
		//line gen/gotpl/domain.qtpl:122
		qw422016.N().S(`
	err = h.Execute(ctxt, `)
		//line gen/gotpl/domain.qtpl:123
		qw422016.N().S(CommandMethodType(c, nil))
		//line gen/gotpl/domain.qtpl:123
		qw422016.N().S(`, `)
		//line gen/gotpl/domain.qtpl:123
		qw422016.N().S(pval)
		//line gen/gotpl/domain.qtpl:123
		qw422016.N().S(`, &res)
	if err != nil {
		return `)
		//line gen/gotpl/domain.qtpl:125
		qw422016.N().S(emptyRet)
		//line gen/gotpl/domain.qtpl:125
		qw422016.N().S(`err
	}
	`)
		//line gen/gotpl/domain.qtpl:127
		if b64ret != nil {
			//line gen/gotpl/domain.qtpl:127
			qw422016.N().S(`
	// decode
	var dec []byte`)
			//line gen/gotpl/domain.qtpl:129
			if b64cond {
				//line gen/gotpl/domain.qtpl:129
				qw422016.N().S(`
	if res.Base64encoded {`)
				//line gen/gotpl/domain.qtpl:130
			}
			//line gen/gotpl/domain.qtpl:130
			qw422016.N().S(`
		dec, err = base64.StdEncoding.DecodeString(res.`)
			//line gen/gotpl/domain.qtpl:131
			qw422016.N().S(GoName(b64ret, false))
			//line gen/gotpl/domain.qtpl:131
			qw422016.N().S(`)
		if err != nil {
			return `)
			//line gen/gotpl/domain.qtpl:133
			qw422016.N().S(emptyRet)
			//line gen/gotpl/domain.qtpl:133
			qw422016.N().S(`err
		}`)
			//line gen/gotpl/domain.qtpl:134
			if b64cond {
				//line gen/gotpl/domain.qtpl:134
				qw422016.N().S(`
	} else {
		dec = []byte(res.`)
				//line gen/gotpl/domain.qtpl:136
				qw422016.N().S(GoName(b64ret, false))
				//line gen/gotpl/domain.qtpl:136
				qw422016.N().S(`)
	}`)
				//line gen/gotpl/domain.qtpl:137
			}
			//line gen/gotpl/domain.qtpl:137
		}
		//line gen/gotpl/domain.qtpl:137
		qw422016.N().S(`
	return `)
		//line gen/gotpl/domain.qtpl:138
		qw422016.N().S(retValueList)
		//line gen/gotpl/domain.qtpl:138
		qw422016.N().S(`nil`)
		//line gen/gotpl/domain.qtpl:138
	}
	//line gen/gotpl/domain.qtpl:138
	qw422016.N().S(`
}
`)
//line gen/gotpl/domain.qtpl:140
}

//line gen/gotpl/domain.qtpl:140
func WriteCommandDoFuncTemplate(qq422016 qtio422016.Writer, c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) {
	//line gen/gotpl/domain.qtpl:140
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line gen/gotpl/domain.qtpl:140
	StreamCommandDoFuncTemplate(qw422016, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:140
	qt422016.ReleaseWriter(qw422016)
//line gen/gotpl/domain.qtpl:140
}

//line gen/gotpl/domain.qtpl:140
func CommandDoFuncTemplate(c *pdl.Type, d *pdl.Domain, domains []*pdl.Domain, sharedFunc func(string, string) bool) string {
	//line gen/gotpl/domain.qtpl:140
	qb422016 := qt422016.AcquireByteBuffer()
	//line gen/gotpl/domain.qtpl:140
	WriteCommandDoFuncTemplate(qb422016, c, d, domains, sharedFunc)
	//line gen/gotpl/domain.qtpl:140
	qs422016 := string(qb422016.B)
	//line gen/gotpl/domain.qtpl:140
	qt422016.ReleaseByteBuffer(qb422016)
	//line gen/gotpl/domain.qtpl:140
	return qs422016
//line gen/gotpl/domain.qtpl:140
}
